//master code
#include <compat/twi.h>

int button1 = 6;
int button2 = 7;
output bool PIN_13;
output bool PIN_12;
output bool PIN_11;
output bool PIN_10;
input bool PIN_06;
input bool PIN_07;


var char SLA = 4;	// slave address
var char sendData = 0;
var char getData = 0;

TWBR = ((F_CPU / 100000L) - 16) / 2;
unsigned char temp = TWCR;
await 2ms;

par/and do
    loop do
        TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN)|(1<<TWIE);
        await 300ms;
    end
with
  spawn async/isr [TWI_vect] do
    if TW_STATUS==TW_START then
        TWDR = (SLA << 1) | TW_WRITE;
        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWIE);        
    else/if TW_STATUS==TW_MT_SLA_ACK then
        sendData = 0;
        if (_digitalRead(button1)) sendData |= 1;
        if (_digitalRead(button2)) sendData |= 1<<1;
        TWDR = sendData;
        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWIE);
    else/if TW_STATUS==TW_MT_DATA_ACK then
        TWCR = (1<<TWINT)|(1<<TWEN)| (1<<TWSTA) | (1<<TWIE);
    else/if TW_STATUS==TW_REP_START then    
        TWDR = (SLA << 1) | TW_READ;
        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWIE);
    else/if TW_STATUS==TW_MR_SLA_ACK then
        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWIE);
    else/if TW_STATUS==TW_MR_DATA_NACK then
        getData = TWDR;
        emit PIN_11(getData & 1);
        emit PIN_10((getData >> 1) & 1);
        TWCR = (1<<TWINT)|(1<<TWEN)| (1<<TWSTO) | (1<<TWIE);
    else    
        TWCR = (1<<TWINT)|(1<<TWEN)| (1<<TWSTO) | (1<<TWIE);
        emit PIN_12(HIGH);
    end
  end  
end