#ifndef _ARDUINO_AVR_CEU
#define _ARDUINO_AVR_CEU

native/const
    _ADC_vect_num,
    _PCINT0_vect_num,
    _SPI_STC_vect_num,
    _TWI_vect_num,
    _TIMER1_COMPA_vect_num,
    _TIMER1_OVF_vect_num,
    _USART0_RX_vect_num,
    _USART0_TX_vect_num,
    _USART_RX_vect_num,
    _USART_TX_vect_num,
    _WDT_vect_num,
;

native
    _ADCSRA,
    _ADIE,
    _ADMUX,
    _CS10,
    _CS12,
    _OCIE1A,
    _OCR1A,
    _RXCIE0,
    _RXEN0,
    _TCCR1A,
    _TCCR1B,
    _TCNT1,
    _TIMSK1,
    _TOIE1,
    _TXCIE0,
    _TXEN0,
    _UBRR0H,
    _UBRR0L,
    _UCSR0A,
    _UCSR0B,
    _UCSR0C,
    _UCSZ00,
    _UDR0,
    _UDRE0,
    _USBS0,
    _WGM12,
;

native/pre do
    ##include <avr/io.h>
    ##include "LowPower.h"

#ifdef CEU_FEATURES_ISR_SLEEP
    enum {
        CEU_PM_ADC = 0,
        CEU_PM_SPI,
        CEU_PM_TIMER1,
        CEU_PM_USART,
        CEU_PM_WDT,
        CEU_PM_N,
    };

#define CEU_PM_DEBUG
//#define CEU_FEATURES_ISR_SLEEP_MIN

    void ceu_pm_init (void) {
        // ok
#ifdef CEU_PM_DEBUG
        pinMode(4, OUTPUT);
        pinMode(5, OUTPUT);
        pinMode(6, OUTPUT);
#endif
    }

    void ceu_pm_sleep (void)
    {
#ifdef CEU_FEATURES_ISR_SLEEP_MIN

#ifdef CEU_PM_DEBUG
            digitalWrite(4, 1);
            digitalWrite(5, 1);
            digitalWrite(6, 1);
#endif
            LowPower.idle(SLEEP_FOREVER, ADC_ON,
##if defined (__AVR_ATmega2560__) || defined (__AVR_ATmega1280__)
                          TIMER5_ON, TIMER4_ON, TIMER3_ON,
##endif
                          TIMER2_ON, TIMER1_ON,
                          TIMER0_ON, SPI_ON,
##if defined (__AVR_ATmega2560__) || defined (__AVR_ATmega1280__)
                          USART3_ON, USART2_ON, USART1_ON,
##endif
                          USART0_ON, TWI_ON);
#ifdef CEU_PM_DEBUG
            digitalWrite(4, 0);
            digitalWrite(5, 0);
            digitalWrite(6, 0);
#endif

#else

        if (CEU_PM_STATE(CEU_PM_TIMER1) || CEU_PM_STATE(CEU_PM_USART) || CEU_PM_STATE(CEU_PM_SPI))
        {
#ifdef CEU_PM_DEBUG
            digitalWrite(6, 1);
#endif
            LowPower.idle(SLEEP_FOREVER,
                          CEU_PM_STATE(CEU_PM_ADC),
##if defined (__AVR_ATmega2560__) || defined (__AVR_ATmega1280__)
                          TIMER5_OFF, TIMER4_OFF, TIMER3_OFF,
##endif
                          TIMER2_OFF,
                          CEU_PM_STATE(CEU_PM_TIMER1),
                          TIMER0_OFF,
                          CEU_PM_STATE(CEU_PM_SPI),
##if defined (__AVR_ATmega2560__) || defined (__AVR_ATmega1280__)
                          USART3_OFF, USART2_OFF, USART1_OFF,
##endif
                          CEU_PM_STATE(CEU_PM_USART),
                          TWI_OFF);
#ifdef CEU_PM_DEBUG
            digitalWrite(6, 0);
#endif
        }
        else if (CEU_PM_STATE(CEU_PM_ADC))
        {
#ifdef CEU_PM_DEBUG
            digitalWrite(5, 1);
#endif
            LowPower.adcNoiseReduction(SLEEP_FOREVER,
                                       CEU_PM_STATE(CEU_PM_ADC),
                                       TIMER2_OFF);
#ifdef CEU_PM_DEBUG
            _DELAY(50);
            digitalWrite(5, 0);
#endif
        }
        else
        {
#ifdef CEU_PM_DEBUG
            digitalWrite(4, 1);
#endif
            LowPower.powerDown(SLEEP_FOREVER, ADC_OFF, BOD_OFF);
#ifdef CEU_PM_DEBUG
            digitalWrite(4, 0);
#endif
        }

#endif
    }
#endif

end

#endif
